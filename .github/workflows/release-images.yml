name: release

on:
  workflow_dispatch:
  push:
    branches:
      - main
  schedule:
    # Run at 4PM UTC every Monday
    - cron: '0 16 * * 1'

jobs:
  alpine-316:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Get Version
        id: version
        run: |
          export HUGO_VERSION=$(curl -sSL https://api.github.com/repos/gohugoio/hugo/tags | jq -r "[.[].name] | .[0] | sub(\"v\";\"\")")
          echo "HUGO_VERSION=${HUGO_VERSION}" >> $GITHUB_ENV
          echo "Version: ${HUGO_VERSION}"
      - name: Build
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            --build-arg OS_NAME="alpine" \
            --build-arg OS_VERSION="3.16" \
            --build-arg HUGO_VERSION="${HUGO_VERSION}" \
            -f Dockerfile \
            -t truemark/hugo:${HUGO_VERSION}-alpine-3.16 \
            -t truemark/hugo:alpine-3.16 \
            .
  alpine-317:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Get Version
        id: version
        run: |
          export HUGO_VERSION=$(curl -sSL https://api.github.com/repos/gohugoio/hugo/tags | jq -r "[.[].name] | .[0] | sub(\"v\";\"\")")
          echo "HUGO_VERSION=${HUGO_VERSION}" >> $GITHUB_ENV
          echo "Version: ${HUGO_VERSION}"
      - name: Build
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            --build-arg OS_NAME="alpine" \
            --build-arg OS_VERSION="3.17" \
            --build-arg HUGO_VERSION="${HUGO_VERSION}" \
            -f Dockerfile \
            -t truemark/hugo:${HUGO_VERSION}-alpine-3.17 \
            -t truemark/hugo:alpine-3.17 \
            -t truemark/hugo:alpine \
            -t truemark/hugo:latest \
            .
      - name: Keepalive
        uses: gautamkrishnar/keepalive-workflow@v1
  ubuntu-focal:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Get Version
        id: version
        run: |
          export HUGO_VERSION=$(curl -sSL https://api.github.com/repos/gohugoio/hugo/tags | jq -r "[.[].name] | .[0] | sub(\"v\";\"\")")
          echo "HUGO_VERSION=${HUGO_VERSION}" >> $GITHUB_ENV
          echo "Version: ${HUGO_VERSION}"
      - name: Build
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            --build-arg OS_NAME="ubuntu" \
            --build-arg OS_VERSION="focal" \
            --build-arg HUGO_VERSION="${HUGO_VERSION}" \
            -f Dockerfile \
            -t truemark/hugo:${HUGO_VERSION}-ubuntu-focal \
            -t truemark/hugo:ubuntu-focal \
            .
  ubuntu-jammy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Get Version
        id: version
        run: |
          export HUGO_VERSION=$(curl -sSL https://api.github.com/repos/gohugoio/hugo/tags | jq -r "[.[].name] | .[0] | sub(\"v\";\"\")")
          echo "HUGO_VERSION=${HUGO_VERSION}" >> $GITHUB_ENV
          echo "Version: ${HUGO_VERSION}"
      - name: Build
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            --build-arg OS_NAME="ubuntu" \
            --build-arg OS_VERSION="jammy" \
            --build-arg HUGO_VERSION="${HUGO_VERSION}" \
            -f Dockerfile \
            -t truemark/hugo:${HUGO_VERSION}-ubuntu-jammy \
            -t truemark/hugo:ubuntu-jammy \
            -t truemark/hugo:ubuntu \
            .
  debian-buster:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Get Version
        id: version
        run: |
          export HUGO_VERSION=$(curl -sSL https://api.github.com/repos/gohugoio/hugo/tags | jq -r "[.[].name] | .[0] | sub(\"v\";\"\")")
          echo "HUGO_VERSION=${HUGO_VERSION}" >> $GITHUB_ENV
          echo "Version: ${HUGO_VERSION}"
      - name: Build
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            --build-arg OS_NAME="debian" \
            --build-arg OS_VERSION="buster" \
            --build-arg HUGO_VERSION="${HUGO_VERSION}" \
            -f Dockerfile \
            -t truemark/hugo:${HUGO_VERSION}-debian-buster \
            -t truemark/hugo:debian-buster \
            .
  debian-bullseye:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Get Version
        id: version
        run: |
          export HUGO_VERSION=$(curl -sSL https://api.github.com/repos/gohugoio/hugo/tags | jq -r "[.[].name] | .[0] | sub(\"v\";\"\")")
          echo "HUGO_VERSION=${HUGO_VERSION}" >> $GITHUB_ENV
          echo "Version: ${HUGO_VERSION}"
      - name: Build
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            --build-arg OS_NAME="debian" \
            --build-arg OS_VERSION="bullseye" \
            --build-arg HUGO_VERSION="${HUGO_VERSION}" \
            -f Dockerfile \
            -t truemark/hugo:${HUGO_VERSION}-debian-bullseye \
            -t truemark/hugo:debian-bullseye \
            .
  debian-bookworm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Get Version
        id: version
        run: |
          export HUGO_VERSION=$(curl -sSL https://api.github.com/repos/gohugoio/hugo/tags | jq -r "[.[].name] | .[0] | sub(\"v\";\"\")")
          echo "HUGO_VERSION=${HUGO_VERSION}" >> $GITHUB_ENV
          echo "Version: ${HUGO_VERSION}"
      - name: Build
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            --build-arg OS_NAME="debian" \
            --build-arg OS_VERSION="bookworm" \
            --build-arg HUGO_VERSION="${HUGO_VERSION}" \
            -f Dockerfile \
            -t truemark/hugo:${HUGO_VERSION}-debian-bookworm \
            -t truemark/hugo:debian-bookworm \
            -t truemark/hugo:debian \
            .
  debian-buster-slim:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Get Version
        id: version
        run: |
          export HUGO_VERSION=$(curl -sSL https://api.github.com/repos/gohugoio/hugo/tags | jq -r "[.[].name] | .[0] | sub(\"v\";\"\")")
          echo "HUGO_VERSION=${HUGO_VERSION}" >> $GITHUB_ENV
          echo "Version: ${HUGO_VERSION}"
      - name: Build
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            --build-arg OS_NAME="debian" \
            --build-arg OS_VERSION="buster-slim" \
            --build-arg HUGO_VERSION="${HUGO_VERSION}" \
            -f Dockerfile \
            -t truemark/hugo:${HUGO_VERSION}-debian-buster-slim \
            -t truemark/hugo:debian-buster-slim \
            .
  debian-bullseye-slim:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Get Version
        id: version
        run: |
          export HUGO_VERSION=$(curl -sSL https://api.github.com/repos/gohugoio/hugo/tags | jq -r "[.[].name] | .[0] | sub(\"v\";\"\")")
          echo "HUGO_VERSION=${HUGO_VERSION}" >> $GITHUB_ENV
          echo "Version: ${HUGO_VERSION}"
      - name: Build
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            --build-arg OS_NAME="debian" \
            --build-arg OS_VERSION="bullseye-slim" \
            --build-arg HUGO_VERSION="${HUGO_VERSION}" \
            -f Dockerfile \
            -t truemark/hugo:${HUGO_VERSION}-debian-bullseye-slim \
            -t truemark/hugo:debian-bullseye-slim \
            .
  debian-bookworm-slim:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Get Version
        id: version
        run: |
          export HUGO_VERSION=$(curl -sSL https://api.github.com/repos/gohugoio/hugo/tags | jq -r "[.[].name] | .[0] | sub(\"v\";\"\")")
          echo "HUGO_VERSION=${HUGO_VERSION}" >> $GITHUB_ENV
          echo "Version: ${HUGO_VERSION}"
      - name: Build
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            --build-arg OS_NAME="debian" \
            --build-arg OS_VERSION="bookworm-slim" \
            --build-arg HUGO_VERSION="${HUGO_VERSION}" \
            -f Dockerfile \
            -t truemark/hugo:${HUGO_VERSION}-debian-bookworm-slim \
            -t truemark/hugo:debian-bookworm-slim \
            .
  amazonlinux-2:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Get Version
        id: version
        run: |
          export HUGO_VERSION=$(curl -sSL https://api.github.com/repos/gohugoio/hugo/tags | jq -r "[.[].name] | .[0] | sub(\"v\";\"\")")
          echo "HUGO_VERSION=${HUGO_VERSION}" >> $GITHUB_ENV
          echo "Version: ${HUGO_VERSION}"
      - name: Build
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            --build-arg OS_NAME="amazonlinux" \
            --build-arg OS_VERSION="2" \
            --build-arg HUGO_VERSION="${HUGO_VERSION}" \
            -f Dockerfile \
            -t truemark/hugo:${HUGO_VERSION}-amazonlinux-2 \
            -t truemark/hugo:amazonlinux-2 \
            .
  amazonlinux-2022:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Get Version
        id: version
        run: |
          export HUGO_VERSION=$(curl -sSL https://api.github.com/repos/gohugoio/hugo/tags | jq -r "[.[].name] | .[0] | sub(\"v\";\"\")")
          echo "HUGO_VERSION=${HUGO_VERSION}" >> $GITHUB_ENV
          echo "Version: ${HUGO_VERSION}"
      - name: Build
        run: |
          docker buildx build \
            --push \
            --platform linux/arm64,linux/amd64 \
            --build-arg OS_NAME="amazonlinux" \
            --build-arg OS_VERSION="2022" \
            --build-arg HUGO_VERSION="${HUGO_VERSION}" \
            -f Dockerfile \
            -t truemark/hugo:${HUGO_VERSION}-amazonlinux-2022 \
            -t truemark/hugo:amazonlinux-2022 \
            -t truemark/hugo:amazonlinux \
            .
